"""
This module stores standardized templates for documents generated by the DW5 engine.
"""

import os
import sys
from .state_manager import WorkflowState

WORKING_PHILOSOPHY = """**Working Philosophy:** We always look to granularize projects into small, atomic requirements and sub-requirements. The more granular the requirement, the easier it is to scope, implement, test, and validate. This iterative approach minimizes risk and ensures steady, verifiable progress."""

def process_prompt(prompt_text: str):
    """
    Augments a raw user prompt and generates a formal technical specification markdown file.
    """
    state = WorkflowState()
    requirement_id = state.get("RequirementPointer")
    file_path = f"deliverables/engineering/cycle_{requirement_id}_technical_specification.md"

    content = f"# Requirement: {requirement_id}\n\n"
    content += f"## 1. High-Level Goal\n\n{prompt_text}\n\n"
    content += f"## 2. Guiding Principles\n\n{WORKING_PHILOSOPHY}\n"

    try:
        os.makedirs(os.path.dirname(file_path), exist_ok=True)
        with open(file_path, 'w') as f:
            f.write(content)
        print(f"Successfully created specification: {file_path}")
    except IOError as e:
        print(f"ERROR: Could not write to file {file_path}.\n{e}", file=sys.stderr)
        sys.exit(1)

TECHNICAL_SPECIFICATION_TEMPLATE = """
# {project_name} - Cycle {cycle_number} - Technical Specification

**Date:** {date}

## 1. Overview

*A brief summary of the goals for this cycle. What business value will be delivered?*

## 2. Scope

### In Scope

*   Clearly define what functionalities will be built.

### Out of Scope

*   Clearly define what will *not* be built to manage expectations.

## 3. System Architecture

*A high-level description of the proposed architecture. How do the components interact?*

```mermaid
graph TD;
    A[User] -->|Submits Data| B(API Endpoint);
    B --> C{{Business Logic}};
    C --> D[Database];
```

## 4. Data Model

*Description of new or modified data structures, database schemas, and relationships.*

## 5. Functional Requirements (User Stories)

*   **US-01:** As a [user type], I want to [action] so that [benefit].
    *   **Acceptance Criteria 1:** [Condition to be met for the story to be considered complete]
    *   **Acceptance Criteria 2:** [Another condition]

## 6. Implementation Plan

*A numbered, logical list of tasks for the Coder. This is the direct input for the next stage.*

1.  **Task:**
2.  **Task:**
3.  **Task:**

## 7. Questions & Assumptions

*   **Question:** [Any open questions for stakeholders?]
*   **Assumption:** [Any assumptions made that could impact the project?]

"""
